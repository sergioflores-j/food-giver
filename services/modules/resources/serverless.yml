service: food-giver-resources
package:
  individually: true
  exclude:
    - node_modules/aws-sdk/**

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  stage: api
  timeout: 30
  tags:
    ms: food-giver-resources
  logRetentionInDays: 7
  apiGateway:
    minimumCompressionSize: 102400 # Compress response when larger than specified size in bytes (must be between 0 and 10485760)
  iamRoleStatements:
    ${file(../../shared/serverless-config.yml):iamRoleStatements}

functions:
  healthCheck:
    handler: src/v1/health/check.run
    memorySize: 128
    events:
      - http:
          path: /resources/health/check
          method: GET
          cors: true

custom:
  dynamodb:
    start:
      port: 8000
      migrate: true
      seed: true
      convertEmptyValues: true
    stages:
      - api
    seed:
      domain:
        sources:
          - table: FG.Chat
            sources: [./test/_fixtures/FG.Chat.json]
          - table: FG.ChatMessage
            sources: [./test/_fixtures/FG.ChatMessage.json]
          - table: FG.Donation
            sources: [./test/_fixtures/FG.Donation.json]
          - table: FG.Food
            sources: [./test/_fixtures/FG.Food.json]
          - table: FG.Necessity
            sources: [./test/_fixtures/FG.Necessity.json]
          - table: FG.User
            sources: [./test/_fixtures/FG.User.json]
  serverless-offline:
    lambdaPort: null
    httpPort: ${file(../../../dev.serverless.env.json):port.resources}
  # Deletes all previous versions of the functions except for the last 'number' after deploy
  # Prevents the error: CodeStorageExceededException
  prune:
    automatic: true
    number: 3
  dotenv:
    path: ../../shared/.env
  webpack:
    excludeFiles: 
      - src/**/*.test.js
      - test/**/*.test.js

plugins:
  - serverless-dotenv-plugin
  - serverless-dynamodb-local
  - serverless-webpack
  - serverless-offline
  - serverless-prune-plugin

resources:
  - ${file(./db.yml)}
